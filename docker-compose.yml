version: "3.0"

services:
  prometheus:
    image: prom/prometheus:latest
    user: root
    ports:
      - "9000:9090"
    volumes:
      - ./production/metrics/prometheus:/etc/prometheus
      - ./db-data/prometheus:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    user: root
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./production/metrics/grafana:/etc/grafana/provisioning/datasources
      - ./db-data/grafana:/var/lib/grafana

  broker-service:
    build:
      context: ./broker-service
      dockerfile: ./Dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: 'postgres:latest'
    restart: always
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
      - ./production/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  auth-service:
    build:
      context: ./auth-service
      dockerfile: ./Dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=Europe/Amsterdam connect_timeout=5"